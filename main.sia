type str()

fn __cat(s1: str, s2: str) -> str native

type int()

fn __add(i1: int, i2: int) -> int native
fn __minus(i1: int, i2: int) -> int native
fn __mult(i1: int, i2: int) -> int native
fn __div(i1: int, i2: int) -> int native
fn __mod(i1: int, i2: int) -> int native

type float()

fn __add(f1: float, f2: float) -> int native
fn __minus(f1: float, f2: float) -> int native
fn __mult(f1: float, f2: float) -> int native
fn __div(f1: float, f2: float) -> int native
fn __mod(f1: float, f2: float) -> int native





type person(prenom:str, nom:str)

fn __to_string(p: bold)->str native

fn to_string(p: person)->str {
    (p).__to_string()
}
