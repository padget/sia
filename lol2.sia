type person (name: string, firstname: string, age: int, addr: address)
type address (num: int, street: string, postal_code: string, country: string)

fn create_person (
  name: string, 
  firstname: string,
  age: int, 
  addr: address) : person 
{
  alias __addr : (addr).address() 
  alias p      : (name, firstname, age, __addr).person() 
  p
}

case fn fibonacci(0: int): int { 0 }
case fn fibonacci(1: int): int { 1 }

fn fibonacci (n: int) : int
{
  alias n_minus_1     : (n, 1).minus()
  alias n_minus_2     : (n, 2).minus()
  alias fib_n_minus_1 : (n_minus_1).fibonacci()
  alias fib_n_minus_2 : (n_minus_2).fibonacci()

  (fib_n_minus_1, fib_n_minus_2).add()
}
